#!/bin/bash

##
## General Aliases
##

alias l.='ls -al --color=auto'
alias ls='ls --color=auto'
alias ll='ls -alh --color=auto'

alias mkdir='mkdir -p'
alias svim='sudo vim'
alias psgrep='ps aux | grep'
alias gnr='grep -nr'

alias meminfo='free -m -l -t'   # free memory
alias psmem='ps auxf | sort -r -k 4'   # processes sorted by memory usage
alias psmem10='ps auxf | sort -r -k 4 | head -10'  # 10 highest memory users
alias pscpu='ps auxf | sort -r -k 3' # processes sorted by cpu usage
alias pscpu10='ps auxf | sort -r -k 3 | head -10' # 10 highest cpu users

alias ..='cd ..'
alias .2='cd ../..'
alias .3='cd ../../..'
alias .4='cd ../../../..'
alias .5='cd ../../../../..'


alias xclip='xclip -selection c'

alias sshadd='sshadd.sh'

##
## Work aliases
##

mc_ssh() {
    ssh eltest@mc$1.lab.epochlabs.com
}
alias mcssh='mc_ssh'

mc_scp_to() {
    scp -r $1 eltest@mc$1.lab.epochlabs.com:$2
}
alias mccpy='mc_scp_to'

reimage_mcs() {
    if [[ ! :$PATH: == *:"$HOME/coffee/tools":* ]] ; then
        export PATH=$PATH:$HOME/coffee/tools
    fi

    for i in "$@"; do
        cof -h mc$i setimage
        echo "Reimaging mc-$i..."
        cof -h mc$i reimage 2>&1 > /dev/null
    done

    for i in "$@"; do
        echo -n "Waiting for mc-$i to become ready..."
        cof -h mc$i wait 2>&1 > /dev/null
        echo " done!"
    done
}
alias reimagemcs='reimage_mcs'

reimage_mcs_with() {
    if [[ ! :$PATH: == *:"$HOME/coffee/tools":* ]] ; then
        export PATH=$PATH:$HOME/coffee/tools
    fi

    # get image number and shift it
    local image=$1
    shift

    for i in "$@"; do
        echo $image | cof -h mc$i setimage
        echo "Reimaging mc-$i..."
        cof -h mc$i reimage 2>&1 > /dev/null
    done

    for i in "$@"; do
        echo -n "Waiting for mc-$i to become ready..."
        cof -h mc$i wait 2>&1 > /dev/null
        echo " done!"
    done
}
alias reimagemcswith='reimage_mcs_with'

mckill_func() {
    local ip=$1
    shift

    for prog in "$@"; do
        parallel-ssh -H 10.30.2.$ip -l eltest "sudo pkill -f $prog"
    done
}
alias mckill='mckill_func'

mckillon_func() {
    local start=$1
    local end=$2
    shift; shift

    for i in `seq $start $end`; do
        for prog in "$@"; do
            parallel-ssh -H 10.30.2.$i -l eltest "sudo pkill -f $prog"
        done
    done
}
alias mckillon='mckillon_func'


##
## Arch Aliases
##

alias spac='sudo pacman'
alias spaci='sudo pacman -S'

##
## Ubuntu Aliases
##

alias sapt='sudo apt-get'
alias sapti='sudo apt-get install'
alias sapts='sudo aptitude search'

##
## Function required
##

mk_and_cd() {
	mkdir $1 && cd $1
}
alias mkcd='mk_and_cd'

scons_err() {
	scons $1 &> build_error.cerr || vim build_error.cerr
}
alias sconserr='scons_err'

##
## Git helpers
##

ghub_clone() {
    git clone https://github.com/$1
}
alias ghclone='ghub_clone'

alias gitco='git checkout'
alias gitpom='git push origin master'
alias mkbranch='git checkout -b'
alias gitpull='git pull --rebase'
alias gitcomm='git commit -m'
alias stashdirty='git stash -k'
